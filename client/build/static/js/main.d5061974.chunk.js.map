{"version":3,"sources":["components/Pagination/Pagination.jsx","redux/actions/index.js","components/CharacterCard/GenderIcon.jsx","components/CharacterCard/AliveOrDeadChar.jsx","components/CharacterCard/CharacterCard.jsx","img/portal-gif.gif","components/NoResult/NoResult.jsx","components/SearchBar/InputName.jsx","components/Characters/Characters.jsx","img/rick-morty-header.jpg","components/Header/Header.jsx","components/CharacterDetail/CharacterDetail.jsx","components/Pagination/PaginationThree.jsx","components/Episodes/EpisodeCard.jsx","components/Episodes/FilterByName.jsx","components/Episodes/Episodes.jsx","components/Pagination/PaginationTwo.jsx","components/Locations/LocationCard.jsx","components/Locations/FilterByType.jsx","components/Locations/Locations.jsx","components/SearchBar/SearchBar.jsx","components/StatusAndGender/StatusAndGender.jsx","components/Footer/Footer.jsx","App.js","redux/reducers/index.js","redux/store/index.js","reportWebVitals.js","index.js"],"names":["Pagination","allCharacters","page","totalPages","Math","ceil","length","totalPagesToArray","i","push","next","prev","className","to","parseInt","map","p","searchCharacter","name","dispatch","axios","get","then","res","type","payload","data","catch","err","console","error","getEpisodesByName","GenderIcon","props","gender","female","male","unknown","toLowerCase","AliveOrDeadChar","status","alive","dead","CharacterCard","src","image","alt","id","specie","NoResult","filterChars","portal","InputChar","useDispatch","useState","setName","handleSubmitChar","e","preventDefault","onSubmit","onClick","placeholder","value","onChange","target","Characters","useSelector","state","searchedChar","searchedCharacter","chars","setChars","setPage","useEffect","log","location","search","slice","indexOf","filter","char","floor","random","optionalMessage","Header","logo","CharacterDetail","charId","characterDetail","match","params","Fragment","episode","allEpisodes","EpisodeCard","airDate","charactrs","FilterByName","handleSubmitEpisode","handleInputChangeEpi","window","reload","Episodes","searchedEpi","searchedEpisode","epi","setEpi","filterEpisodes","PaginationTwo","nextPage","prevPage","goToPage","pages","pageButtons","LocationCard","dimension","residents","FilterByType","setType","searchedLocation","onlyTypes","getLocationByType","el","item","Locations","allLocations","searchedLoc","setLoading","locations","setLocations","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","setPages","url","fetchData","a","response","results","info","num","SearchBar","setStatus","setGender","initialFilter","setFilter","handleStatus","getCharByStatus","handleGender","getCharByGender","StatusAndGender","getStatus","getGender","Footer","href","title","rel","App","exact","path","component","initialState","numberOfPages","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5061974.chunk.js","sourcesContent":["import React from \"react\";\r\n//import { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Pagination({ allCharacters, page }) {\r\n  const totalPages = Math.ceil(allCharacters.length / 18); // se obtiene el total de páginas según el número de tarjetas\r\n \r\n  const totalPagesToArray = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    // me irá gnerando el array...\r\n    totalPagesToArray.push(i);\r\n  }\r\n  const next = page ? page < totalPages : true;\r\n  const prev = page > 1; //si está en una página mayor que 1, se mostrará el prev.\r\n\r\n  return (\r\n    <div className=\"pag\">\r\n      {prev ? (\r\n        <Link\r\n          key=\"PREV\"\r\n          className=\"pag-link-left\"\r\n          to={`/?page=${parseInt(page) - 1}`}>\r\n          <button>Prev</button>\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {totalPagesToArray.map((p) => (\r\n        <Link key={p} className=\"pag-link-center\" to={`/?page=${p}`}>\r\n          <button className={page === p ? \"active\" : \"\"}>{p}</button>\r\n        </Link>\r\n      ))}\r\n      {next ? (\r\n        <Link\r\n          key=\"NEXT\"\r\n          className=\"pag-link-right\"\r\n          to={`/?page=${parseInt(page) + 1}`}>\r\n          <button>Next</button>\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nexport function getAllCharacters() {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(\"http://localhost:3001/characters\")\r\n\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({\r\n          type: \"GET_ALL_CHARACTERS\",\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function searchCharacter(name) {\r\n  if (name !== \"\") {\r\n    return function (dispatch) {\r\n      axios\r\n        .get(`http://localhost:3001/characters?name=${name}`)\r\n        .then((res) =>\r\n          dispatch({\r\n            type: \"SEARCH_CHARACTER\",\r\n            payload: res.data,\r\n          })\r\n        )\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    };\r\n  } else {\r\n    return {\r\n      type: \"SEARCH_CHARACTER\",\r\n      payload: [],\r\n    };\r\n  }\r\n}\r\n\r\nexport function getCharByStatus(status) {\r\n  if (status) {\r\n    return function (dispatch) {\r\n      axios\r\n        .get(`http://localhost:3001/charbystatus?status=${status}`)\r\n        .then((res) =>\r\n          dispatch({\r\n            type: \"GET_CHAR_BY_STATUS\",\r\n            payload: res.data,\r\n          })\r\n        )\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    };\r\n  } else {\r\n    return {\r\n      type: \"GET_CHAR_BY_STATUS\",\r\n      payload: [],\r\n    };\r\n  }\r\n}\r\n\r\nexport function getCharByGender(gender) {\r\n  if (gender) {\r\n    return function (dispatch) {\r\n      axios\r\n        .get(`http://localhost:3001/charbygender?gender=${gender}`)\r\n        .then((res) =>\r\n          dispatch({\r\n            type: \"GET_CHAR_BY_GENDER\",\r\n            payload: res.data,\r\n          })\r\n        )\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    };\r\n  } else {\r\n    return {\r\n      type: \"GET_CHAR_BY_GENDER\",\r\n      payload: [],\r\n    };\r\n  }\r\n}\r\n\r\nexport function getCharacterDetail(id) {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`http://localhost:3001/characters/${id}`)\r\n      .then((res) =>\r\n        dispatch({\r\n          type: \"GET_CHARACTER_DETAIL\",\r\n          payload: res.data,\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function getAllEpisodes() {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(\"http://localhost:3001/episodes\")\r\n      .then((res) =>\r\n        dispatch({\r\n          type: \"GET_ALL_EPISODES\",\r\n          payload: res.data,\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function getEpisodesByName(name) {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`http://localhost:3001/episodes?name=${name}`)\r\n      .then((res) =>\r\n        dispatch({\r\n          type: \"GET_EPISODES_BY_NAME\",\r\n          payload: res.data,\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function getAllLocations() {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(\"http://localhost:3001/locations\")\r\n      .then((res) =>\r\n        dispatch({\r\n          type: \"GET_ALL_LOCATIONS\",\r\n          payload: res.data,\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function getLocationByType(type) {\r\n  return function (dispatch) {\r\n    axios\r\n      .get(`http://localhost:3001/locations?type=${type}`)\r\n      .then((res) =>\r\n        dispatch({\r\n          type: \"GET_LOCATION_BY_TYPE\",\r\n          payload: res.data,\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { MdFemale, MdMale } from \"react-icons/md\";\r\nimport { GoQuestion } from \"react-icons/go\";\r\nimport \"./GenderIcon.css\";\r\n\r\nconst GenderIcon = (props) => {\r\n  const female = <MdFemale className=\"female\" />;\r\n  const male = <MdMale className=\"male\" />;\r\n  const unknown = <GoQuestion className=\"unknown\" />;\r\n\r\n  const genders = (gender) => {\r\n    if (gender.toLowerCase() === \"female\") {\r\n      return female;\r\n    } else if (gender.toLowerCase() === \"male\") {\r\n      return male;\r\n    } else if (gender.toLowerCase() === \"unknown\") {\r\n      return unknown;\r\n    }\r\n  };\r\n  return <>{genders(props.gender)}</>;\r\n};\r\n\r\nexport default GenderIcon;\r\n","import React from \"react\";\r\nimport { MdTagFaces, MdMoodBad } from \"react-icons/md\";\r\nimport { GoQuestion } from \"react-icons/go\";\r\nimport \"./AliveOrDead.css\";\r\n\r\nconst AliveOrDeadChar = (props) => {\r\n  const alive = <MdTagFaces className=\"alive\" />;\r\n  const dead = <MdMoodBad className=\"dead\" />;\r\n  const unknown = <GoQuestion className=\"unknown\" />;\r\n\r\n  const isAlive = (status) => {\r\n    if (status.toLowerCase() === \"alive\") {\r\n      return alive;\r\n    } else if (status.toLowerCase() === \"dead\") {\r\n      return dead;\r\n    } else if (status.toLowerCase() === \"unknown\") {\r\n      return unknown;\r\n    }\r\n  };\r\n  return <>{isAlive(props.status)}</>;\r\n};\r\n\r\nexport default AliveOrDeadChar;\r\n","import React from \"react\";\r\nimport GenderIcon from \"./GenderIcon\";\r\nimport AliveOrDeadChar from \"./AliveOrDeadChar\";\r\nimport { GiHumanTarget } from \"react-icons/gi\";\r\n//import { FaMapMarkerAlt } from \"react-icons/fa\";\r\n//import { RiRecordCircleFill } from \"react-icons/ri\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"char__li--art\" key={props.name + props.id}>\r\n        <img className=\"char__li--art-img\" src={props.image} alt={props.name} />\r\n        <div className=\"char__li--art-info\">\r\n          <div className=\"char__li--art-info-name\" key={props.id}>\r\n            <h2 className=\"text-name\">{props.name}</h2>\r\n          </div>\r\n          <div className=\"property\">\r\n            Status:\r\n            <div className=\"value\">\r\n              {props.status}\r\n              <AliveOrDeadChar className=\"value\" status={props.status} />\r\n            </div>\r\n          </div>\r\n          <div className=\"property\">\r\n            Specie:\r\n            <div className=\"value\">\r\n              {props.specie}\r\n              <GiHumanTarget className=\"value\" />{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className=\"property\">\r\n            Gender:\r\n            <div className=\"value\">\r\n              {props.gender}\r\n              <GenderIcon className=\"value\" gender={props.gender} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/*  <h3>\r\n              Location:\r\n              <FaMapMarkerAlt className=\"card\" location={props.location} />\r\n              {props.location}\r\n            </h3>\r\n         \r\n         \r\n            <h3>\r\n              Episodes:\r\n              <RiRecordCircleFill className=\"card\" episode={props.episode} />\r\n              {props.episode}\r\n            </h3> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/portal-gif.aeba5f34.gif\";","import React from \"react\";\r\nimport portal from \"../../img/portal-gif.gif\";\r\n\r\nconst NoResult = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"noResults\">\r\n        <p className=\"noResults__text\">\r\n          Oops!{\" \"}\r\n          <span className=\"noResults__text-input\">{props.filterChars}</span>This\r\n          is not in this dimension.\r\n        </p>\r\n        <img className=\"noResults__img\" src={portal} alt=\"Not found\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default NoResult;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { searchCharacter } from \"../../redux/actions/index\";\r\n//import { RiSearch2Line } from \"react-icons/ri\";\r\n\r\nconst InputChar = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleInputChangeChar = (e) => {\r\n    e.preventDefault();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSubmitChar = (e) => {\r\n    e.preventDefault();\r\n    dispatch(searchCharacter(name));\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmitChar}>\r\n      <div>\r\n        <button className=\"form__select\">\r\n          <Link to=\"/\" onClick={handleSubmitChar} className=\"text\">\r\n            Characters\r\n          </Link>{\" \"}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button className=\"form__select\">\r\n          <Link to=\"/locations\" className=\"text\">\r\n            Locations\r\n          </Link>{\" \"}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button className=\"form__select\">\r\n          <Link to=\"/episodes\" className=\"text\">\r\n            Episodes\r\n          </Link>{\" \"}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button className=\"form__text-link\">\r\n          <Link to=\"/statusandgender\" className=\"text\">\r\n            Filter by status or gender\r\n          </Link>\r\n        </button>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        placeholder=\"Search by character name, e.g: Morty\"\r\n        value={name}\r\n        onChange={handleInputChangeChar}\r\n        className=\"form__input-text\"\r\n      />\r\n      {/*  <button\r\n          className=\"btn\"\r\n          type=\"submit\"\r\n         \r\n        >\r\n          <RiSearch2Line />\r\n        </button> */}\r\n    </form>\r\n  );\r\n};\r\nexport default InputChar;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport {\r\n  getAllCharacters,\r\n  searchCharacter,\r\n} from \"../../redux/actions/index.js\";\r\nimport CharacterCard from \"../CharacterCard/CharacterCard\";\r\nimport NoResult from \"../NoResult/NoResult\";\r\nimport InputChar from \"../SearchBar/InputName\";\r\n\r\nconst Characters = (props) => {\r\n  const dispatch = useDispatch();\r\n  const allCharacters = useSelector((state) => state.allCharacters);\r\n  const searchedChar = useSelector((state) => state.searchedCharacter);\r\n\r\n  const [chars, setChars] = useState([]);\r\n  const [page, setPage] = useState(1); //it starts in the page 1...\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCharacters());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (props.location.search !== \"\") {\r\n      setPage(\r\n        parseInt(\r\n          props.location.search.slice(props.location.search.indexOf(\"=\") + 1)\r\n        )\r\n      );\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  useEffect(() => {\r\n    if (searchedChar.length > 0) {\r\n      setChars(searchedChar);\r\n    } else {\r\n      setChars(allCharacters);\r\n    }\r\n  }, [allCharacters, searchedChar]);\r\n\r\n  useEffect(() => {\r\n    return searchCharacter(\"\");\r\n  }, []);\r\n\r\n  const filterChars = allCharacters.filter((char) => {\r\n    return char.name.toLowerCase(); //.includes(name.toLowerCase());\r\n  });\r\n\r\n  //optional message if there is not character with this name...\r\n  const optionalMessage = () => {\r\n    if (filterChars.length === 0) {\r\n      return <NoResult filterChars={filterChars} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-card\">\r\n      <InputChar />\r\n      <div className=\"characters\">\r\n        <li className=\"characters\">\r\n          {searchedChar && searchedChar.length > 0 ? ( //Cuando se busque por nombre, se renderizará este primer bloque de código. Si no hay búsqueda, se renderizará solo el segundo bloque de código.\r\n            searchedChar?.slice((page - 1) * 18, page * 18).map((e) => (\r\n              <Link\r\n                className=\"link-txt\"\r\n                key={e.id + e.name}\r\n                to={`/characters/${e.id}`}\r\n              >\r\n                <CharacterCard\r\n                  key={Math.floor(Math.random() * 10000)}\r\n                  image={e.image}\r\n                  name={e.name}\r\n                  status={e.status}\r\n                  specie={e.specie}\r\n                  gender={e.gender}\r\n                  location={e.location}\r\n                />\r\n              </Link>\r\n            ))\r\n          ) : (\r\n            <div className=\"characters\">\r\n              <li className=\"characters\">\r\n                {chars?.slice((page - 1) * 18, page * 18).map((e) => (\r\n                  <Link\r\n                    className=\"link-txt\"\r\n                    key={e.id}\r\n                    to={`/characters/${e.id}`}\r\n                  >\r\n                    <CharacterCard\r\n                      key={e.id}\r\n                      image={e.image}\r\n                      name={e.name}\r\n                      status={e.status}\r\n                      specie={e.specie}\r\n                      gender={e.gender}\r\n                      location={e.location}\r\n                    />\r\n                  </Link>\r\n                ))}\r\n              </li>\r\n            </div>\r\n          )}\r\n        </li>\r\n      </div>\r\n      <div className=\"optionalMessage\">{optionalMessage()}</div>\r\n      <Pagination allCharacters={chars} page={page} />\r\n    </div>\r\n  );\r\n};\r\nexport default Characters;\r\n","export default __webpack_public_path__ + \"static/media/rick-morty-header.fe08015b.jpg\";","/* import React from 'react';\r\nimport portal from \"../../img/portal-gif.gif\";\r\nimport rickmorty from \"../../img/names.png\";\r\nimport rickmorty from \"../../img/header.gif\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={rickmorty} alt=\"Rick and Morty\" className=\"rick-morty\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header; */\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport logo from \"../../img/rick-morty-header.jpg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header id=\"header\">\r\n      <img className=\"header\" src={logo} alt=\"logo rick and morty\" />\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCharacterDetail } from \"../../redux/actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsFillArrowUpLeftCircleFill } from \"react-icons/bs\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const charId = useSelector((state) => state.characterDetail);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacterDetail(props.match.params.id));\r\n  }, [dispatch, props.match.params.id]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"detail\" key={charId.id}>\r\n        <Link to=\"/\" className=\"detail__back\">\r\n          <button className=\"detail__back\">\r\n            <BsFillArrowUpLeftCircleFill />\r\n            Go back\r\n          </button>\r\n        </Link>\r\n        {charId.name && (\r\n          <section className=\"detail__art\">\r\n            <img\r\n              className=\"detail__art--img\"\r\n              src={charId.image}\r\n              alt={charId.name}\r\n            />\r\n            <div className=\"detail__art--info\" key={charId.id}>\r\n              <h2 className=\"detail__art--info-name\">{charId.name}</h2>\r\n              <p className=\"detail__art--info-all\">Specie: {charId.specie}</p>\r\n              <p className=\"detail__article--info-all\">\r\n                Status: {charId.status}\r\n              </p>\r\n              <p className=\"detail__article--info-all\">\r\n                Gender: {charId.gender}\r\n              </p>\r\n              <p className=\"detail__article--info-all\">\r\n                Location: {charId.location}\r\n              </p>\r\n              <p className=\"detail__article--info-all\">\r\n                Episodes: {charId.episode}\r\n              </p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Pagination({ allEpisodes, page }) {\r\n  const totalPages = Math.ceil(allEpisodes.length / 18); // se obtiene el total de páginas según el número de tarjetas\r\n\r\n  const totalPagesToArray = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    // me irá gnerando el array...\r\n    totalPagesToArray.push(i);\r\n  }\r\n  const next = page ? page < totalPages : true;\r\n  const prev = page > 1; //si está en una página mayor que 1, se mostrará el prev.\r\n\r\n  return (\r\n    <div className=\"pag\">\r\n      {prev ? (\r\n        <Link\r\n          key=\"PREV\"\r\n          className=\"pag-link\"\r\n          to={`/episodes?page=${parseInt(page) - 1}`}\r\n        >\r\n          <button>Prev</button>\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {totalPagesToArray.map((p) => (\r\n        <Link key={p} className=\"pag-link\" to={`/episodes?page=${p}`}>\r\n          <button className={page === p ? \"active\" : \"\"}>{p}</button>\r\n        </Link>\r\n      ))}\r\n      {next ? (\r\n        <Link\r\n          key=\"NEXT\"\r\n          className=\"pag-link\"\r\n          to={`/episodes?page=${parseInt(page) + 1}`}\r\n        >\r\n          <button>Next</button>\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/* import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PaginationThree = ({ epiPerPage, paginated }) => {\r\n  const allEpisodes = useSelector((state) => state.allEpisodes);\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(allEpisodes.length / epiPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"pagination\">\r\n        <a className=\"btn\" href=\"#previous\" aria-label=\"Previous\">\r\n          <span aria-hidden=\"true\">&laquo;</span>\r\n        </a>{\" \"}\r\n        <ul>\r\n          {pageNumbers.map((number) => (\r\n            <li  className=\"btn\" key={number}>\r\n              <a onClick={() => paginated(number)} href=\"#episodes\">\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <div className=\"pagination\">\r\n            <a className=\"btn\" href=\"#next\" aria-label=\"Next\">\r\n              <span aria-hidden=\"true\">&raquo;</span>\r\n            </a>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationThree;\r\n */\r\n","import React from \"react\";\r\nimport { MdOutlineConfirmationNumber } from \"react-icons/md\";\r\nimport { IoIosPeople } from \"react-icons/io\";\r\nimport { BsCalendarDate } from \"react-icons/bs\";\r\n\r\nconst EpisodeCard = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"char__li--art--epi\" key={props.name + props.id}>\r\n        <div className=\"char__li--art-info\">\r\n          <div className=\"char__li--art-info-name-loc\" key={props.id}>\r\n          <h2>{props.name}</h2>\r\n          </div>\r\n          <div className=\"property-loc\">Episode:\r\n          <div className=\"value-loc\">{props.episode}</div>\r\n          <MdOutlineConfirmationNumber className=\"card\" />\r\n          </div>\r\n          <div className=\"property-loc\">Air Date:\r\n          <div className=\"value-loc\">{props.airDate} </div>\r\n          <BsCalendarDate className=\"card\" />\r\n          </div>\r\n          <div className=\"property-loc\">Characters:\r\n          <div className=\"value-loc\">{props.charactrs} </div>\r\n          <IoIosPeople className=\"card\" />\r\n            </div>\r\n\r\n        {/*   <h4>\r\n            Episode: <MdOutlineConfirmationNumber className=\"card\" />\r\n            {props.episode}\r\n          </h4>\r\n          <h4>\r\n            AirDate: <BsCalendarDate className=\"card\" />\r\n            {props.airDate}\r\n          </h4>\r\n          <h4>\r\n            Characters: <IoIosPeople className=\"card\" />\r\n            {props.charactrs}\r\n          </h4> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getEpisodesByName } from \"../../redux/actions/index\";\r\n//import { RiSearch2Line } from \"react-icons/ri\";\r\n\r\nconst FilterByName = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleInputChangeEpi = (e) => {\r\n    e.preventDefault();\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSubmitEpisode = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getEpisodesByName(name));\r\n    setName(\"\");\r\n  };\r\n\r\n  const onClear = () => {\r\n    setName(\"\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onClick={(e) => handleSubmitEpisode(e)}>\r\n      <div>\r\n        <button className=\"form__select-btn\">\r\n          <Link className=\"text\" to=\"/\">\r\n            Characters\r\n          </Link>{\" \"}\r\n        </button>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Search by episode name...\"\r\n        value={name}\r\n        onChange={(e) => handleInputChangeEpi(e)}\r\n        className=\"form__input-text\"\r\n      />\r\n      {/*      <button\r\n          className=\"btn\"\r\n          type=\"submit\"\r\n          onClick={(e) => handleSubmitEpisode(e)}\r\n        >\r\n          <RiSearch2Line />\r\n        </button> */}\r\n      <button className=\"form__select-btn\" type=\"submit\" onClick={onClear}>\r\n        {\" \"}\r\n        <Link className=\"text\" to=\"/episodes\">\r\n          Reset\r\n        </Link>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PaginationThree from \"../Pagination/PaginationThree\";\r\nimport EpisodeCard from \"./EpisodeCard\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport { getAllEpisodes, getEpisodesByName } from \"../../redux/actions\";\r\nimport NoResult from \"../NoResult/NoResult\";\r\n\r\nconst Episodes = (props) => {\r\n  const dispatch = useDispatch();\r\n  const searchedEpi = useSelector((state) => state.searchedEpisode);\r\n  const allEpisodes = useSelector((state) => state.allEpisodes);\r\n\r\n  /*   //paginated\r\n  const [currentPage, setCurrentPage] = useState(1); //Comenzamos con página 1\r\n  const [epiPerPage] = useState(12); //12 por página */\r\n\r\n  const [epi, setEpi] = useState([]);\r\n  const [page, setPage] = useState(1); //it starts in the page 1...\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllEpisodes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (props.location.search !== \"\") {\r\n      setPage(\r\n        parseInt(\r\n          props.location.search.slice(props.location.search.indexOf(\"=\") + 1)\r\n        )\r\n      );\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  useEffect(() => {\r\n    if (searchedEpi.length > 0) {\r\n      setEpi(searchedEpi);\r\n    } else {\r\n      setEpi(allEpisodes);\r\n    }\r\n  }, [allEpisodes, searchedEpi]);\r\n\r\n  useEffect(() => {\r\n    return getEpisodesByName(\"\");\r\n  }, []);\r\n\r\n  const filterEpisodes = allEpisodes.filter((epi) => {\r\n    return epi.name.toLowerCase(); //.includes(name.toLowerCase());\r\n  });\r\n\r\n  //optional message if there is not character with this name...\r\n  const optionalMessage = () => {\r\n    if (filterEpisodes.length === 0) {\r\n      return <NoResult filterEpisodes={filterEpisodes} />;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"grid-card\">\r\n      <FilterByName />\r\n      <div className=\"characters\">\r\n        {searchedEpi && searchedEpi.length > 0 ? (\r\n          searchedEpi?.slice((page - 1) * 18, page * 18).map((e) => (\r\n            <li key={e.id + e.name} className=\"locations\">\r\n              <EpisodeCard\r\n                className=\"locations\"\r\n                key={Math.floor(Math.random() * 10000)}\r\n                id={e.id}\r\n                name={e.name}\r\n                episode={e.episode}\r\n                airDate={e.airDate}\r\n                charactrs={e.charactrs}\r\n              />\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <div className=\"charaters\">\r\n            <li className=\"characters\">\r\n              {epi?.slice((page - 1) * 18, page * 18).map(\r\n                (\r\n                  e //it comes from DB...\r\n                ) => (\r\n                  <li key={e.id + e.name} className=\"locations\">\r\n                    <EpisodeCard\r\n                      className=\"locations\"\r\n                      key={Math.floor(Math.random() * 10000)}\r\n                      id={e.id}\r\n                      name={e.name}\r\n                      airDate={e.airDate}\r\n                      episode={e.episode}\r\n                      charactrs={e.charactrs}\r\n                    />\r\n                  </li>\r\n                )\r\n              )}\r\n            </li>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"optionalMessage\">{optionalMessage()}</div>\r\n      <PaginationThree allEpisodes={epi} page={page} />\r\n    </div>\r\n  );\r\n};\r\nexport default Episodes;\r\n","import React from 'react'\r\n\r\nconst PaginationTwo = ({ nextPage, prevPage, goToPage, pages }) => {\r\n  let pageButtons = []\r\n  for (let i = 1; i <= pages; i++) {\r\n    pageButtons.push(<button  key={i} onClick={() => goToPage(i)}>{i}</button>)\r\n  }\r\n  return (\r\n    <div className='pag'> \r\n      {prevPage && (<button className='pag-link' onClick={prevPage}>Previous</button>)}\r\n      {pageButtons}\r\n      {nextPage && (<button className='pag-link' onClick={nextPage}>Next</button>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaginationTwo;","import React from \"react\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\nimport { GiConcentricCrescents } from \"react-icons/gi\";\r\nimport { IoIosPeople } from \"react-icons/io\";\r\n\r\nconst LocationCard = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"char__li--art--loc\" key={props.name + props.id}>\r\n        <div className=\"char__li--art-info\">\r\n          <div className=\"char__li--art-info-name-loc\" key={props.id}>\r\n            <h2>{props.name}</h2>\r\n          </div>\r\n          <div className=\"property-loc\">Type:\r\n          <div className=\"value-loc\">{props.type}</div>\r\n          <FaMapMarkerAlt className=\"card\" />\r\n          </div>\r\n          <div className=\"property-loc\">Dimension:\r\n          <div className=\"value-loc\">{props.dimension}</div>\r\n          <GiConcentricCrescents className=\"card\" />\r\n          </div>\r\n          <div className=\"property-loc\">Residents:\r\n          <div className=\"value-loc\">{props.residents}</div>\r\n          <IoIosPeople className=\"card\" />\r\n            </div>\r\n         {/*  <h4>\r\n            Type: <FaMapMarkerAlt className=\"card\" />\r\n            {props.type}\r\n          </h4>\r\n          <h4>\r\n            Dimension: <GiConcentricCrescents className=\"card\" />\r\n            {props.dimension}\r\n          </h4>\r\n          <h4>\r\n            Residents: <IoIosPeople className=\"card\" />\r\n            {props.residents}\r\n          </h4> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocationCard;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLocationByType } from \"../../redux/actions\";\r\n\r\nconst FilterByType = (props) => {\r\n  const [type, setType] = useState(\"\");\r\n  // eslint-disable-next-line\r\n  const searchedTypes = useSelector((state) => state.searchedLocation);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleType = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const handleSubmitType = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getLocationByType(type));\r\n  };\r\n\r\n  const onClear = () => {\r\n    setType(\"\");\r\n    window.location.reload();\r\n  };\r\n\r\n  let onlyTypes = [\r\n    \"Planet\",\r\n    \"Cluster\",\r\n    \"Space Station\",\r\n    \"Microverse\",\r\n    \"TV\",\r\n    \"Resort\",\r\n    \"Fantasy Town\",\r\n    \"Dream\",\r\n    \"unknown\",\r\n    \"Menagerie\",\r\n    \"Game\",\r\n    \"Customs\",\r\n    \"Daycare\",\r\n    \"Dwarf planet\",\r\n    \"Teenyverse\",\r\n    \"Box\",\r\n    \"Spacecraft\",\r\n    \"Artificially generated world\",\r\n    \"Machine\",\r\n    \"Arcade\",\r\n    \"Spa\",\r\n    \"Quadrant\",\r\n    \"Quasar\",\r\n    \"Mount\",\r\n    \"Liquid\",\r\n    \"Convention\",\r\n    \"Woods\",\r\n    \"Diegesis\",\r\n    \"Non-Diegetic Alternative Reality\",\r\n    \"Nightmare\",\r\n    \"Asteroide\",\r\n    \"Acid Plant\",\r\n    \"Dimension\",\r\n    \"Reality\",\r\n    \"Death Star\",\r\n    \"Base\",\r\n    \"Elemental Rings\",\r\n    \"Human\",\r\n    \"Hell\",\r\n    \"Police Department\",\r\n    \" Country\",\r\n    \"Consciousness\",\r\n    \"Memory\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div>\r\n        <button className=\"form__select-btn\">\r\n          <Link className=\"text\" to=\"/\">\r\n            Characters\r\n          </Link>{\" \"}\r\n        </button>\r\n      </div>\r\n      <select\r\n        className=\"form__dropdown\"\r\n        type=\"text\"\r\n        id=\"type\"\r\n        placeholder=\"Search by location type\"\r\n        value={type.type}\r\n        onChange={handleType}\r\n        onClick={handleSubmitType}\r\n      >\r\n        <option>Search location by type</option>\r\n        {onlyTypes.map((el) => (\r\n          <>\r\n            <option key={onlyTypes} value={el.item}>\r\n              {el}\r\n            </option>\r\n          </>\r\n        ))}\r\n      </select>\r\n      <button className=\"form__select-btn\" type=\"submit\" onClick={onClear}>\r\n        {\" \"}\r\n        <Link className=\"text\" to=\"/locations\">\r\n          Reset\r\n        </Link>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default FilterByType;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PaginationTwo from \"../Pagination/PaginationTwo\";\r\nimport LocationCard from \"./LocationCard\";\r\nimport FilterByType from \"./FilterByType\";\r\nimport axios from \"axios\";\r\n\r\nconst Locations = () => {\r\n  const allLocations = useSelector((state) => state.allLocations);\r\n  const searchedLoc = useSelector((state) => state.searchedLocation);\r\n  // eslint-disable-next-line\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [locations, setLocations] = useState([]);\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(\r\n    \"https://rickandmortyapi.com/api/location\"\r\n  );\r\n  const [nextPageUrl, setNextPageUrl] = useState();\r\n  const [prevPageUrl, setPrevPageUrl] = useState();\r\n  const [pages, setPages] = useState();\r\n\r\n  useEffect(() => {\r\n    const url = currentPageUrl;\r\n    setLoading(true);\r\n    const fetchData = async () => {\r\n      axios.get(url).then((response) => {\r\n        setLocations(response.data.results);\r\n        setLoading(false);\r\n        setNextPageUrl(response.data.info.next);\r\n        setPrevPageUrl(response.data.info.prev);\r\n        setPages(response.data.info.pages);\r\n      });\r\n      /* using fetch:\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        setLocations(data.results)\r\n        setLoading(false);\r\n        setNextPageUrl(data.info.next);\r\n        setPrevPageUrl(data.info.prev);\r\n        setPages(data.info.pages) */\r\n    };\r\n    fetchData();\r\n  }, [allLocations, currentPageUrl]);\r\n\r\n  function nextPage() {\r\n    setCurrentPageUrl(nextPageUrl);\r\n  }\r\n\r\n  function prevPage() {\r\n    setCurrentPageUrl(prevPageUrl);\r\n  }\r\n\r\n  function goToPage(num) {\r\n    setCurrentPageUrl(`https://rickandmortyapi.com/api/location?page=${num}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-card\">\r\n      <FilterByType />\r\n      <div className=\"characters\">\r\n        <li className=\"characters\">\r\n          {searchedLoc && searchedLoc.length > 0 ? (\r\n            searchedLoc.map((e) => (\r\n              <div key={e.id + e.name}>\r\n                <LocationCard\r\n                  className=\"locations\"\r\n                  key={Math.floor(Math.random() * 10000)}\r\n                  name={e.name}\r\n                  type={e.type}\r\n                  dimension={e.dimension}\r\n                  residents={e.residents}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"characters\">\r\n              <li className=\"characters\">\r\n                {locations?.map((e) => (\r\n                  <li key={e.id + e.name} className=\"locations\">\r\n                    <LocationCard\r\n                      className=\"locations\"\r\n                      key={Math.floor(Math.random() * 10000)}\r\n                      name={e.name}\r\n                      type={e.type}\r\n                      dimension={e.dimension}\r\n                      residents={e.residents.length}\r\n                    />\r\n                  </li>\r\n                ))}\r\n              </li>\r\n            </div>\r\n          )}\r\n        </li>\r\n      </div>\r\n      <PaginationTwo\r\n        nextPage={nextPageUrl ? nextPage : null}\r\n        prevPage={prevPageUrl ? prevPage : null}\r\n        goToPage={goToPage}\r\n        pages={pages}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Locations;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCharByStatus, getCharByGender } from \"../../redux/actions\";\r\n\r\nconst SearchBar = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n\r\n  const initialFilter = {\r\n    name: \"\",\r\n    status: \"\",\r\n    gender: \"\",\r\n  };\r\n  // eslint-disable-next-line\r\n  const [filter, setFilter] = useState({ initialFilter });\r\n\r\n  //>>>>>>>> handle status <<<<<<<<<<\r\n  const handleStatus = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n  const handleSubmitStatus = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getCharByStatus(status));\r\n  };\r\n\r\n  //>>>>>>>> handle gender <<<<<<<<<<\r\n  const handleGender = (e) => {\r\n    setGender(e.target.value);\r\n  };\r\n\r\n  const handleSubmitGender = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getCharByGender(gender));\r\n  };\r\n\r\n  const onClear = () => {\r\n    setStatus(\"\");\r\n    setGender(\"\");\r\n    window.location.reload();\r\n\r\n    setFilter({\r\n      status,\r\n      gender,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div>\r\n        <button className=\"form__select\">\r\n          <Link  className=\"text\" to=\"/\">Characters</Link>{\" \"}\r\n        </button>\r\n      </div>\r\n      <select\r\n        className=\"form__dropdown\"\r\n        type=\"submit\"\r\n        id=\"status\"\r\n        placeholder=\"Search by character status\"\r\n        value={status}\r\n        onChange={(e) => handleStatus(e)}\r\n        onClick={handleSubmitStatus}\r\n      >\r\n        <option value=\"Search by status\">Search by status</option>\r\n        <option value=\"Alive\">Alive</option>\r\n        <option value=\"Dead\">Dead</option>\r\n        <option value=\"unknown\">Unknown</option>\r\n      </select>\r\n\r\n      <select\r\n        className=\"form__dropdown\"\r\n        type=\"submit\"\r\n        id=\"gender\"\r\n        placeholder=\"Search by character gender\"\r\n        value={gender}\r\n        onChange={(e) => handleGender(e)}\r\n        onClick={handleSubmitGender}\r\n      >\r\n        <option value=\"Search by gender\">Search by gender</option>\r\n        <option value=\"Female\">Female</option>\r\n        <option value=\"Male\">Male</option>\r\n        <option value=\"Unknown\">Unknown</option>\r\n      </select>\r\n      <button className=\"form__select\" type=\"submit\" onClick={onClear}>\r\n        {\" \"}\r\n        <Link className=\"text\" to=\"/statusandgender\">Reset</Link>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CharacterCard from \"../CharacterCard/CharacterCard\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nconst StatusAndGender = (props) => {\r\n  const getStatus = useSelector((state) => state.getStatus);\r\n  const getGender = useSelector((state) => state.getGender);\r\n\r\n  return (\r\n    <div className=\"grid-card\">\r\n      <SearchBar setFilter={props.setFilter} />\r\n      <div className=\"characters\">\r\n        {getStatus && getStatus.length > 0 ? ( //Cuando se busque por nombre, se renderizará este primer bloque de código. Si no hay búsqueda, se renderizará solo el segundo bloque de código.\r\n          getStatus.map((e) => (\r\n            <Link key={e.id} to={`/characters/${e.id}`}>\r\n              <li key={e.id + e.name} className=\"chararacters\">\r\n                <CharacterCard\r\n                  className=\"characters\"\r\n                  key={e.id}\r\n                  image={e.image}\r\n                  name={e.name}\r\n                  status={e.status}\r\n                  specie={e.specie}\r\n                  gender={e.gender}\r\n                  location={e.location}\r\n                />\r\n              </li>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <div className=\"characters\">\r\n            <li className=\"characters\">\r\n              {getGender &&\r\n                getGender.map((e) => (\r\n                  <Link key={e.id} to={`/characters/${e.id}`}>\r\n                    <CharacterCard\r\n                      className=\"characters\"\r\n                      key={e.id}\r\n                      image={e.image}\r\n                      name={e.name}\r\n                      status={e.status}\r\n                      specie={e.specie}\r\n                      gender={e.gender}\r\n                      location={e.location.name}\r\n                    />\r\n                  </Link>\r\n                ))}\r\n            </li>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusAndGender;\r\n","import React from 'react';\r\nimport {AiFillGithub} from 'react-icons/ai';\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <footer className=\"footer\">\r\n          <small className='txts'> {`Developed by  <Carolina Altamiranda N. />`} &copy; 2021</small>\r\n          <a href={'https://github.com/Qarola'} title={'github.com/Qarola'} target=\"_blank\" rel=\"noreferrer\"> <AiFillGithub className=\"github_icon\" /></a>\r\n          </footer>   \r\n    );\r\n  };\r\n  export default Footer;","import React from \"react\";\r\nimport Characters from './components/Characters/Characters.jsx';\r\nimport Header from './components/Header/Header.jsx';\r\nimport CharacterDetail from './components/CharacterDetail/CharacterDetail.jsx';\r\nimport Episodes from './components/Episodes/Episodes.jsx';\r\nimport Locations from './components/Locations/Locations.jsx';\r\nimport StatusAndGender from \"./components/StatusAndGender/StatusAndGender.jsx\";\r\nimport Footer from \"./components/Footer/Footer.jsx\"\r\nimport { Route } from \"react-router-dom\"; \r\n\r\nimport \"./stylesheets/App.scss\";\r\n\r\nfunction App() {\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <React.Fragment>\r\n      <Route exact path=\"/\" component={Characters} />\r\n      <Route path=\"/characters/:id\" component={CharacterDetail} />      \r\n      <Route path=\"/statusandgender\" component={StatusAndGender} />\r\n      <Route path=\"/locations\" component={Locations} /> \r\n      <Route path=\"/episodes\" component={Episodes} />\r\n    </React.Fragment>\r\n    <Footer />\r\n    </div>  \r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  allCharacters: [],\r\n  allEpisodes: [],\r\n  allLocations: [],\r\n  searchedCharacter: [], //searched by name\r\n  searchedEpisode: [], //searched by name\r\n  searchedLocation: [], //searched by type\r\n  characterDetail: {},\r\n  getStatus: [],\r\n  getGender: [],\r\n  numberOfPages: null,\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_ALL_CHARACTERS\":\r\n      return {\r\n        ...state,\r\n        allCharacters: action.payload,\r\n      };\r\n    case \"SEARCH_CHARACTER\":\r\n      return {\r\n        ...state,\r\n        searchedCharacter: action.payload,\r\n      };\r\n    case \"GET_CHAR_BY_STATUS\":\r\n      return {\r\n        ...state,\r\n        getStatus: action.payload,\r\n      };\r\n    case \"GET_CHAR_BY_GENDER\":\r\n      return {\r\n        ...state,\r\n        getGender: action.payload,\r\n      };\r\n    case \"GET_CHARACTER_DETAIL\":\r\n      return {\r\n        ...state,\r\n        characterDetail: action.payload,\r\n      };\r\n\r\n    case \"GET_ALL_EPISODES\":\r\n      return {\r\n        ...state,\r\n        allEpisodes: action.payload,\r\n      };\r\n    case \"GET_EPISODES_BY_NAME\":\r\n      return {\r\n        ...state,\r\n        searchedEpisode: action.payload,\r\n      };\r\n    case \"GET_ALL_LOCATIONS\":\r\n      return {\r\n        ...state,\r\n        allLocations: action.payload,\r\n      };\r\n    case \"GET_LOCATION_BY_TYPE\":\r\n      return {\r\n        ...state,\r\n        searchedLocation: action.payload,\r\n      };\r\n    case \"NEXT\":\r\n      return {\r\n        ...state,\r\n        allCharacters: action.payload,\r\n      };\r\n    case \"PREV\":\r\n      return {\r\n        ...state,\r\n        allCharacters: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from '../reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk)\r\n  \r\n));\r\n\r\n\r\n\r\n\r\n\r\n\r\n//window._REDUX_DEVTOOLS_EXTENSION_&&window._REDUX_DEVTOOLS_EXTENSION_()","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./stylesheets/App.scss\";\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <div className='color'>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}